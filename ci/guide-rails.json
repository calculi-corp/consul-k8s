{
	"metadata": {
		"version": 2
	},
	"application": {
		"name": "consul-k8s",
		"language": "GOLANG",
		"artifact_store": {
			"repositories": null
		}
	},
	"pipeline": {
		"segments": [
			{
				"name": "Build",
				"segment_type": "build",
				"exit_actions": {},
				"properties": [
					{
						"name": "gopath",
						"value": "${SEGMENT_BASE_DIR}/cache/go",
						"description": "GOPATH is set to ${SEGMENT_BASE_DIR}/cache/go by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created"
					}
				],
				"deployment_strategy": {},
				"application_init": {},
				"packages": [
					{
						"name": "consul",
						"downloads": [],
						"type": 2,
						"helm_package": {
							"pkg_source": 1,
							"charts_folder": "charts/consul",
							"chart_name": "consul"
						}
					}
				],
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"cache_info": {
					"paths": [
						"((gopath))"
					]
				}
			},
			{
				"name": "Isolation",
				"segment_type": "isolation",
				"run_after": [
					"Build"
				],
				"exit_actions": {},
				"properties": [
					{
						"name": "preparedQuery.enabled",
						"value": true,
						"type": "boolean"
					},
					{
						"name": "global.openshift.enabled",
						"value": false,
						"type": "boolean"
					},
					{
						"name": "privateRegistry.secret",
						"value": "grdockercreds",
						"type": "string"
					},
					{
						"name": "privateRegistry.url",
						"value": "((gr.docker_registry.server))",
						"type": "string"
					},
					{
						"name": "mkcerts.image",
						"value": "registry.guide-rails.io/guide-rails/mkcerts",
						"type": "string"
					},
					{
						"name": "dns.enabled",
						"value": true,
						"type": "boolean"
					},
					{
						"name": "global.enabled",
						"value": false,
						"type": "boolean"
					},
					{
						"name": "global.datacenter",
						"value": "((customer.name))-k8s",
						"type": "string"
					},
					{
						"name": "global.tls.enabled",
						"value": true,
						"type": "boolean"
					},
					{
						"name": "global.tls.caKey.secretName",
						"value": "consul-ca-key",
						"type": "string"
					},
					{
						"name": "global.tls.caKey.secretKey",
						"value": "tls.key",
						"type": "string"
					},
					{
						"name": "global.tls.caCert.secretName",
						"value": "consul-ca-cert",
						"type": "string"
					},
					{
						"name": "global.tls.caCert.secretKey",
						"value": "tls.crt",
						"type": "string"
					},
					{
						"name": "server.enabled",
						"value": true,
						"type": "boolean"
					},
					{
						"name": "server.serverCert.secretName",
						"value": "consul-ca-cert",
						"type": "string"
					},
					{
						"name": "client.enabled",
						"value": false,
						"type": "boolean"
					},
					{
						"name": "syncCatalog.enabled",
						"value": true,
						"type": "boolean"
					},
					{
						"name": "syncCatalog.default",
						"value": true,
						"type": "boolean"
					},
					{
						"name": "syncCatalog.toK8S",
						"value": "true",
						"type": "string"
					},
					{
						"name": "syncCatalog.toConsul",
						"value": "true",
						"type": "string"
					},
					{
						"name": "syncCatalog.k8sAllowNamespaces",
						"value": "[\"((application.name))-isolation\"]",
						"description": "Set to '*' for Production deployments",
						"type": "array"
					},
					{
						"name": "syncCatalog.k8sTag",
						"value": "((application.shortsha))",
						"type": "string"
					},
					{
						"name": "privateRegistry.username",
						"value": "((gr.docker_registry.username))",
						"type": "string"
					},
					{
						"name": "privateRegistry.password",
						"value": "((gr.docker_registry.password))",
						"type": "string"
					},
					{
						"name": "global.tls.caKey.key",
						"value": "((tls.key))",
						"type": "string"
					},
					{
						"name": "global.tls.caCert.cert",
						"value": "((tls.cert))",
						"type": "string"
					},
					{
						"name": "gr.helm.wait.timeout",
						"value": "5m",
						"type": "string"
					},
					{
						"name": "syncCatalog.consulNamespaces.mirroringK8S",
						"value": false,
						"type": "boolean"
					},
					{
						"name": "connectInject.consulNamespaces.mirroringK8S",
						"value": false,
						"type": "boolean"
					},
					{
						"name": "connectInject.enabled",
						"value": false,
						"type": "boolean"
					},
					{
						"name": "server.replicas",
						"value": 3,
						"type": "number"
					}
				],
				"deployment_strategy": {
					"canaries": 1,
					"max_in_flight": 1,
					"canary_watch_time": "5000-30000",
					"update_watch_time": "5000-30000",
					"serial": false
				},
				"application_init": {},
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"tasks": [
					{
						"name": "consul-k8s",
						"docker_options": {}
					}
				],
				"k8s_instance_groups": [
					{
						"tool_config_alias_id": "db29d801-2f6f-4542-5050-4b376f358edc",
						"docker_registry_alias_id": "cc9edc73-f30b-4c9a-5d01-e03f7930a904",
						"name": "((application.name))",
						"cluster_name": "",
						"namespace": "((application.name))-isolation",
						"replicas": 1,
						"containers": [
							{
								"name": "((application.name))",
								"resources": {},
								"imagePullPolicy": "Always",
								"securityContext": {
									"runAsNonRoot": true
								}
							}
						],
						"load_balancing_type": 2,
						"service_name": "((application.name))-((application.branch))",
						"type": "Deployment",
						"deploy_application": false,
						"helm_packages": [
							{
								"name": "consul",
								"type": 2,
								"helmPackages": [
									{
										"pkg_source": 1,
										"charts_folder": "charts/consul",
										"chart_name": "consul",
										"release_name": "consul-((segment.name))"
									}
								]
							}
						]
					}
				],
				"deployment_target": 2
			},
			{
				"name": "Release",
				"segment_type": "release",
				"persistent": true,
				"run_after": [
					"Isolation"
				],
				"exit_actions": {},
				"properties": [
					{
						"name": "preparedQuery.enabled",
						"value": true,
						"type": "boolean"
					},
					{
						"name": "global.openshift.enabled",
						"value": false,
						"type": "boolean"
					},
					{
						"name": "privateRegistry.secret",
						"value": "grdockercreds",
						"type": "string"
					},
					{
						"name": "privateRegistry.url",
						"value": "((gr.docker_registry.server))",
						"type": "string"
					},
					{
						"name": "mkcerts.image",
						"value": "registry.guide-rails.io/guide-rails/mkcerts",
						"type": "string"
					},
					{
						"name": "dns.enabled",
						"value": true,
						"type": "boolean"
					},
					{
						"name": "global.enabled",
						"value": false,
						"type": "boolean"
					},
					{
						"name": "global.datacenter",
						"value": "((customer.name))-k8s-release",
						"type": "string"
					},
					{
						"name": "global.tls.enabled",
						"value": true,
						"type": "boolean"
					},
					{
						"name": "global.tls.caKey.secretName",
						"value": "consul-ca-key",
						"type": "string"
					},
					{
						"name": "global.tls.caKey.secretKey",
						"value": "tls.key",
						"type": "string"
					},
					{
						"name": "global.tls.caCert.secretName",
						"value": "consul-ca-cert",
						"type": "string"
					},
					{
						"name": "global.tls.caCert.secretKey",
						"value": "tls.crt",
						"type": "string"
					},
					{
						"name": "server.enabled",
						"value": false,
						"type": "boolean"
					},
					{
						"name": "server.serverCert.secretName",
						"value": "consul-ca-cert",
						"type": "string"
					},
					{
						"name": "client.enabled",
						"value": true,
						"type": "boolean"
					},
					{
						"name": "privateRegistry.username",
						"value": "((gr.docker_registry.username))",
						"type": "string"
					},
					{
						"name": "privateRegistry.password",
						"value": "((gr.docker_registry.password))",
						"type": "string"
					},
					{
						"name": "global.tls.caKey.key",
						"value": "((tls.key))",
						"type": "string"
					},
					{
						"name": "global.tls.caCert.cert",
						"value": "((tls.cert))",
						"type": "string"
					},
					{
						"name": "gr.helm.wait.timeout",
						"value": "5m",
						"type": "string"
					},
					{
						"name": "syncCatalog.enabled",
						"value": true,
						"type": "boolean"
					},
					{
						"name": "syncCatalog.default",
						"value": true,
						"type": "boolean"
					},
					{
						"name": "syncCatalog.toK8S",
						"value": "true",
						"type": "string"
					},
					{
						"name": "syncCatalog.toConsul",
						"value": "true",
						"type": "string"
					},
					{
						"name": "syncCatalog.k8sAllowNamespaces",
						"value": "[\"*\"]",
						"type": "array"
					},
					{
						"name": "syncCatalog.k8sTag",
						"value": "((application.shortsha))",
						"type": "string"
					},
					{
						"name": "syncCatalog.consulNamespaces.mirroringK8S",
						"value": false,
						"type": "boolean"
					},
					{
						"name": "connectInject.consulNamespaces.mirroringK8S",
						"value": false,
						"type": "boolean"
					},
					{
						"name": "connectInject.enabled",
						"value": false,
						"type": "boolean"
					},
					{
						"name": "client.join",
						"value": "((consul.dev.joinservers))",
						"type": "array"
					},
					{
						"name": "client.hosts",
						"value": "((consul.dev.joinservers))",
						"type": "array"
					},
					{
						"name": "externalServers.hosts",
						"value": "((consul.dev.joinservers))",
						"type": "array"
					},
					{
						"name": "externalServers.enabled",
						"value": true,
						"type": "boolean"
					}
				],
				"deployment_strategy": {
					"canaries": 1,
					"max_in_flight": 1,
					"canary_watch_time": "5000-30000",
					"update_watch_time": "5000-30000",
					"serial": false
				},
				"application_init": {},
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"gated": true,
				"k8s_instance_groups": [
					{
						"tool_config_alias_id": "db29d801-2f6f-4542-5050-4b376f358edc",
						"docker_registry_alias_id": "cc9edc73-f30b-4c9a-5d01-e03f7930a904",
						"name": "((application.name))-west",
						"cluster_name": "",
						"namespace": "guide-rails",
						"replicas": 1,
						"containers": [
							{
								"name": "((application.name))",
								"resources": {},
								"imagePullPolicy": "Always",
								"securityContext": {
									"runAsNonRoot": true
								}
							}
						],
						"load_balancing_type": 2,
						"service_name": "((application.name))-((application.branch))",
						"type": "Deployment",
						"deploy_application": false,
						"helm_packages": [
							{
								"name": "consul",
								"type": 2,
								"helmPackages": [
									{
										"pkg_source": 1,
										"charts_folder": "charts/consul",
										"chart_name": "consul",
										"release_name": "consul-((segment.name))"
									}
								]
							}
						],
						"properties": [
							{
								"name": "global.datacenter",
								"value": "dc1"
							}
						]
					},
					{
						"tool_config_alias_id": "4f1c7e59-2c86-40ee-7a89-4b879da71ce6",
						"docker_registry_alias_id": "cc9edc73-f30b-4c9a-5d01-e03f7930a904",
						"name": "((application.name))-east",
						"cluster_name": "",
						"namespace": "guide-rails",
						"replicas": 1,
						"containers": [
							{
								"name": "((application.name))",
								"resources": {},
								"imagePullPolicy": "Always",
								"securityContext": {
									"runAsNonRoot": true
								}
							}
						],
						"load_balancing_type": 2,
						"service_name": "((application.name))-((application.branch))",
						"type": "Deployment",
						"deploy_application": false,
						"helm_packages": [
							{
								"name": "consul",
								"type": 2,
								"helmPackages": [
									{
										"pkg_source": 1,
										"charts_folder": "charts/consul",
										"chart_name": "consul",
										"release_name": "consul-((segment.name))"
									}
								]
							}
						],
						"properties": [
							{
								"name": "global.datacenter",
								"value": "dc2"
							},
							{
								"name": "client.join ",
								"value": "((consul.dev_east_first.joinservers))",
								"type": "array"
							},
							{
								"name": "externalServers.hosts",
								"value": "((consul.dev_east_first.joinservers))",
								"type": "array"
							}
						]
					}
				],
				"deployment_target": 2
			}
		],
		"exit_actions": {},
		"default_properties": [],
		"deployment_files": [],
		"application_init": {}
	},
	"organization": {
		"orgname": "GR-Product"
	}
}